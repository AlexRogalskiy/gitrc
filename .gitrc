#!/bin/bash
# Configure colors for git prompt, if available.
if [ "$color_prompt" = yes ]; then
        c_reset='\[\e[0m\]'
        c_user='\[\e[1;33m\]'
        c_path='\[\e[1;34m\]'
        c_git_clean='\[\e[0;36m\]'
        c_git_staged='\[\e[1;35m\]'
        c_git_dirty='\[\e[1;31m\]'
else
        c_reset=
        c_user=
        c_path=
        c_git_clean=
        c_git_staged=
        c_git_dirty=
fi

# Function to assemble the Git part of our prompt.
git_prompt ()
{
        if ! git rev-parse --git-dir > /dev/null 2>&1; then
                return 0
        fi
        git_branch=$(git branch 2>/dev/null | sed -n '/^\*/s/^\* //p')
        if git diff --quiet 2>/dev/null >&2; then
		staged=$(git status --porcelain 2>/dev/null| grep "^M" | wc -l);
                if ! [ $staged -eq 0 ]; then
                       git_color="$c_git_staged";
                else
                        git_color="$c_git_clean";
                fi
        else
                git_color="$c_git_dirty";
        fi
        echo " [$git_color$git_branch${c_reset}]"
}

if [ $(whoami) = "root" ]; then
	prompt_symbol="#"
else
	prompt_symbol="$"
fi

if [ "$color_prompt" = yes ]; then
    PROMPT_COMMAND='PS1="${debian_chroot:+($debian_chroot)}${c_user}\u${c_reset}@${c_user}\h${c_reset}:${c_path}\w${c_reset}$(git_prompt)${prompt_symbol} "'
else
    PROMPT_COMMAND='PS1="${debian_chroot:+($debian_chroot)}\u@\h:\w$(git_prompt)${prompt_symbol} "'
fi

